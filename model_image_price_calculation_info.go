/*
API Образов облачных серверов

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package begetOpenapiVps-image

import (
	"encoding/json"
)

// ImagePriceCalculationInfo struct for ImagePriceCalculationInfo
type ImagePriceCalculationInfo struct {
	Price *float64 `json:"price,omitempty"`
}

// NewImagePriceCalculationInfo instantiates a new ImagePriceCalculationInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewImagePriceCalculationInfo() *ImagePriceCalculationInfo {
	this := ImagePriceCalculationInfo{}
	return &this
}

// NewImagePriceCalculationInfoWithDefaults instantiates a new ImagePriceCalculationInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewImagePriceCalculationInfoWithDefaults() *ImagePriceCalculationInfo {
	this := ImagePriceCalculationInfo{}
	return &this
}

// GetPrice returns the Price field value if set, zero value otherwise.
func (o *ImagePriceCalculationInfo) GetPrice() float64 {
	if o == nil || isNil(o.Price) {
		var ret float64
		return ret
	}
	return *o.Price
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImagePriceCalculationInfo) GetPriceOk() (*float64, bool) {
	if o == nil || isNil(o.Price) {
    return nil, false
	}
	return o.Price, true
}

// HasPrice returns a boolean if a field has been set.
func (o *ImagePriceCalculationInfo) HasPrice() bool {
	if o != nil && !isNil(o.Price) {
		return true
	}

	return false
}

// SetPrice gets a reference to the given float64 and assigns it to the Price field.
func (o *ImagePriceCalculationInfo) SetPrice(v float64) {
	o.Price = &v
}

func (o ImagePriceCalculationInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Price) {
		toSerialize["price"] = o.Price
	}
	return json.Marshal(toSerialize)
}

type NullableImagePriceCalculationInfo struct {
	value *ImagePriceCalculationInfo
	isSet bool
}

func (v NullableImagePriceCalculationInfo) Get() *ImagePriceCalculationInfo {
	return v.value
}

func (v *NullableImagePriceCalculationInfo) Set(val *ImagePriceCalculationInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableImagePriceCalculationInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableImagePriceCalculationInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableImagePriceCalculationInfo(val *ImagePriceCalculationInfo) *NullableImagePriceCalculationInfo {
	return &NullableImagePriceCalculationInfo{value: val, isSet: true}
}

func (v NullableImagePriceCalculationInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableImagePriceCalculationInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


