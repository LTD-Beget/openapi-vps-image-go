/*
API Образов облачных серверов

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package begetOpenapiVps-image

import (
	"encoding/json"
)

// ImageImage struct for ImageImage
type ImageImage struct {
	Id *string `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	Region *string `json:"region,omitempty"`
	Status *string `json:"status,omitempty"`
	CreatedAt *string `json:"created_at,omitempty"`
	Price *float64 `json:"price,omitempty"`
	SizeBytes *string `json:"size_bytes,omitempty"`
	DiskSizeBytes *string `json:"disk_size_bytes,omitempty"`
}

// NewImageImage instantiates a new ImageImage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewImageImage() *ImageImage {
	this := ImageImage{}
	return &this
}

// NewImageImageWithDefaults instantiates a new ImageImage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewImageImageWithDefaults() *ImageImage {
	this := ImageImage{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ImageImage) GetId() string {
	if o == nil || isNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageImage) GetIdOk() (*string, bool) {
	if o == nil || isNil(o.Id) {
    return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ImageImage) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ImageImage) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ImageImage) GetName() string {
	if o == nil || isNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageImage) GetNameOk() (*string, bool) {
	if o == nil || isNil(o.Name) {
    return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ImageImage) HasName() bool {
	if o != nil && !isNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ImageImage) SetName(v string) {
	o.Name = &v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *ImageImage) GetRegion() string {
	if o == nil || isNil(o.Region) {
		var ret string
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageImage) GetRegionOk() (*string, bool) {
	if o == nil || isNil(o.Region) {
    return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *ImageImage) HasRegion() bool {
	if o != nil && !isNil(o.Region) {
		return true
	}

	return false
}

// SetRegion gets a reference to the given string and assigns it to the Region field.
func (o *ImageImage) SetRegion(v string) {
	o.Region = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ImageImage) GetStatus() string {
	if o == nil || isNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageImage) GetStatusOk() (*string, bool) {
	if o == nil || isNil(o.Status) {
    return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ImageImage) HasStatus() bool {
	if o != nil && !isNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *ImageImage) SetStatus(v string) {
	o.Status = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *ImageImage) GetCreatedAt() string {
	if o == nil || isNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageImage) GetCreatedAtOk() (*string, bool) {
	if o == nil || isNil(o.CreatedAt) {
    return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *ImageImage) HasCreatedAt() bool {
	if o != nil && !isNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *ImageImage) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetPrice returns the Price field value if set, zero value otherwise.
func (o *ImageImage) GetPrice() float64 {
	if o == nil || isNil(o.Price) {
		var ret float64
		return ret
	}
	return *o.Price
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageImage) GetPriceOk() (*float64, bool) {
	if o == nil || isNil(o.Price) {
    return nil, false
	}
	return o.Price, true
}

// HasPrice returns a boolean if a field has been set.
func (o *ImageImage) HasPrice() bool {
	if o != nil && !isNil(o.Price) {
		return true
	}

	return false
}

// SetPrice gets a reference to the given float64 and assigns it to the Price field.
func (o *ImageImage) SetPrice(v float64) {
	o.Price = &v
}

// GetSizeBytes returns the SizeBytes field value if set, zero value otherwise.
func (o *ImageImage) GetSizeBytes() string {
	if o == nil || isNil(o.SizeBytes) {
		var ret string
		return ret
	}
	return *o.SizeBytes
}

// GetSizeBytesOk returns a tuple with the SizeBytes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageImage) GetSizeBytesOk() (*string, bool) {
	if o == nil || isNil(o.SizeBytes) {
    return nil, false
	}
	return o.SizeBytes, true
}

// HasSizeBytes returns a boolean if a field has been set.
func (o *ImageImage) HasSizeBytes() bool {
	if o != nil && !isNil(o.SizeBytes) {
		return true
	}

	return false
}

// SetSizeBytes gets a reference to the given string and assigns it to the SizeBytes field.
func (o *ImageImage) SetSizeBytes(v string) {
	o.SizeBytes = &v
}

// GetDiskSizeBytes returns the DiskSizeBytes field value if set, zero value otherwise.
func (o *ImageImage) GetDiskSizeBytes() string {
	if o == nil || isNil(o.DiskSizeBytes) {
		var ret string
		return ret
	}
	return *o.DiskSizeBytes
}

// GetDiskSizeBytesOk returns a tuple with the DiskSizeBytes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageImage) GetDiskSizeBytesOk() (*string, bool) {
	if o == nil || isNil(o.DiskSizeBytes) {
    return nil, false
	}
	return o.DiskSizeBytes, true
}

// HasDiskSizeBytes returns a boolean if a field has been set.
func (o *ImageImage) HasDiskSizeBytes() bool {
	if o != nil && !isNil(o.DiskSizeBytes) {
		return true
	}

	return false
}

// SetDiskSizeBytes gets a reference to the given string and assigns it to the DiskSizeBytes field.
func (o *ImageImage) SetDiskSizeBytes(v string) {
	o.DiskSizeBytes = &v
}

func (o ImageImage) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !isNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !isNil(o.Region) {
		toSerialize["region"] = o.Region
	}
	if !isNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !isNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !isNil(o.Price) {
		toSerialize["price"] = o.Price
	}
	if !isNil(o.SizeBytes) {
		toSerialize["size_bytes"] = o.SizeBytes
	}
	if !isNil(o.DiskSizeBytes) {
		toSerialize["disk_size_bytes"] = o.DiskSizeBytes
	}
	return json.Marshal(toSerialize)
}

type NullableImageImage struct {
	value *ImageImage
	isSet bool
}

func (v NullableImageImage) Get() *ImageImage {
	return v.value
}

func (v *NullableImageImage) Set(val *ImageImage) {
	v.value = val
	v.isSet = true
}

func (v NullableImageImage) IsSet() bool {
	return v.isSet
}

func (v *NullableImageImage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableImageImage(val *ImageImage) *NullableImageImage {
	return &NullableImageImage{value: val, isSet: true}
}

func (v NullableImageImage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableImageImage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


