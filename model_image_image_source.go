/*
API Образов облачных серверов

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package begetOpenapiVps-image

import (
	"encoding/json"
)

// ImageImageSource struct for ImageImageSource
type ImageImageSource struct {
	Link *ImageImageSourceLinkSource `json:"link,omitempty"`
	Vps *ImageImageSourceVpsSource `json:"vps,omitempty"`
}

// NewImageImageSource instantiates a new ImageImageSource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewImageImageSource() *ImageImageSource {
	this := ImageImageSource{}
	return &this
}

// NewImageImageSourceWithDefaults instantiates a new ImageImageSource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewImageImageSourceWithDefaults() *ImageImageSource {
	this := ImageImageSource{}
	return &this
}

// GetLink returns the Link field value if set, zero value otherwise.
func (o *ImageImageSource) GetLink() ImageImageSourceLinkSource {
	if o == nil || isNil(o.Link) {
		var ret ImageImageSourceLinkSource
		return ret
	}
	return *o.Link
}

// GetLinkOk returns a tuple with the Link field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageImageSource) GetLinkOk() (*ImageImageSourceLinkSource, bool) {
	if o == nil || isNil(o.Link) {
    return nil, false
	}
	return o.Link, true
}

// HasLink returns a boolean if a field has been set.
func (o *ImageImageSource) HasLink() bool {
	if o != nil && !isNil(o.Link) {
		return true
	}

	return false
}

// SetLink gets a reference to the given ImageImageSourceLinkSource and assigns it to the Link field.
func (o *ImageImageSource) SetLink(v ImageImageSourceLinkSource) {
	o.Link = &v
}

// GetVps returns the Vps field value if set, zero value otherwise.
func (o *ImageImageSource) GetVps() ImageImageSourceVpsSource {
	if o == nil || isNil(o.Vps) {
		var ret ImageImageSourceVpsSource
		return ret
	}
	return *o.Vps
}

// GetVpsOk returns a tuple with the Vps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageImageSource) GetVpsOk() (*ImageImageSourceVpsSource, bool) {
	if o == nil || isNil(o.Vps) {
    return nil, false
	}
	return o.Vps, true
}

// HasVps returns a boolean if a field has been set.
func (o *ImageImageSource) HasVps() bool {
	if o != nil && !isNil(o.Vps) {
		return true
	}

	return false
}

// SetVps gets a reference to the given ImageImageSourceVpsSource and assigns it to the Vps field.
func (o *ImageImageSource) SetVps(v ImageImageSourceVpsSource) {
	o.Vps = &v
}

func (o ImageImageSource) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Link) {
		toSerialize["link"] = o.Link
	}
	if !isNil(o.Vps) {
		toSerialize["vps"] = o.Vps
	}
	return json.Marshal(toSerialize)
}

type NullableImageImageSource struct {
	value *ImageImageSource
	isSet bool
}

func (v NullableImageImageSource) Get() *ImageImageSource {
	return v.value
}

func (v *NullableImageImageSource) Set(val *ImageImageSource) {
	v.value = val
	v.isSet = true
}

func (v NullableImageImageSource) IsSet() bool {
	return v.isSet
}

func (v *NullableImageImageSource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableImageImageSource(val *ImageImageSource) *NullableImageImageSource {
	return &NullableImageImageSource{value: val, isSet: true}
}

func (v NullableImageImageSource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableImageImageSource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


