/*
API Образов облачных серверов

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package begetOpenapiVps-image

import (
	"encoding/json"
)

// ImageCreateImageResponse struct for ImageCreateImageResponse
type ImageCreateImageResponse struct {
	Image *ImageImage `json:"image,omitempty"`
	Error *ImageCreateImageResponseError `json:"error,omitempty"`
}

// NewImageCreateImageResponse instantiates a new ImageCreateImageResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewImageCreateImageResponse() *ImageCreateImageResponse {
	this := ImageCreateImageResponse{}
	return &this
}

// NewImageCreateImageResponseWithDefaults instantiates a new ImageCreateImageResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewImageCreateImageResponseWithDefaults() *ImageCreateImageResponse {
	this := ImageCreateImageResponse{}
	return &this
}

// GetImage returns the Image field value if set, zero value otherwise.
func (o *ImageCreateImageResponse) GetImage() ImageImage {
	if o == nil || isNil(o.Image) {
		var ret ImageImage
		return ret
	}
	return *o.Image
}

// GetImageOk returns a tuple with the Image field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageCreateImageResponse) GetImageOk() (*ImageImage, bool) {
	if o == nil || isNil(o.Image) {
    return nil, false
	}
	return o.Image, true
}

// HasImage returns a boolean if a field has been set.
func (o *ImageCreateImageResponse) HasImage() bool {
	if o != nil && !isNil(o.Image) {
		return true
	}

	return false
}

// SetImage gets a reference to the given ImageImage and assigns it to the Image field.
func (o *ImageCreateImageResponse) SetImage(v ImageImage) {
	o.Image = &v
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *ImageCreateImageResponse) GetError() ImageCreateImageResponseError {
	if o == nil || isNil(o.Error) {
		var ret ImageCreateImageResponseError
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageCreateImageResponse) GetErrorOk() (*ImageCreateImageResponseError, bool) {
	if o == nil || isNil(o.Error) {
    return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *ImageCreateImageResponse) HasError() bool {
	if o != nil && !isNil(o.Error) {
		return true
	}

	return false
}

// SetError gets a reference to the given ImageCreateImageResponseError and assigns it to the Error field.
func (o *ImageCreateImageResponse) SetError(v ImageCreateImageResponseError) {
	o.Error = &v
}

func (o ImageCreateImageResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Image) {
		toSerialize["image"] = o.Image
	}
	if !isNil(o.Error) {
		toSerialize["error"] = o.Error
	}
	return json.Marshal(toSerialize)
}

type NullableImageCreateImageResponse struct {
	value *ImageCreateImageResponse
	isSet bool
}

func (v NullableImageCreateImageResponse) Get() *ImageCreateImageResponse {
	return v.value
}

func (v *NullableImageCreateImageResponse) Set(val *ImageCreateImageResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableImageCreateImageResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableImageCreateImageResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableImageCreateImageResponse(val *ImageCreateImageResponse) *NullableImageCreateImageResponse {
	return &NullableImageCreateImageResponse{value: val, isSet: true}
}

func (v NullableImageCreateImageResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableImageCreateImageResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


