/*
API Образов облачных серверов

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package begetOpenapiVps-image

import (
	"encoding/json"
)

// ImageGetListResponse struct for ImageGetListResponse
type ImageGetListResponse struct {
	Images []ImageImage `json:"images,omitempty"`
}

// NewImageGetListResponse instantiates a new ImageGetListResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewImageGetListResponse() *ImageGetListResponse {
	this := ImageGetListResponse{}
	return &this
}

// NewImageGetListResponseWithDefaults instantiates a new ImageGetListResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewImageGetListResponseWithDefaults() *ImageGetListResponse {
	this := ImageGetListResponse{}
	return &this
}

// GetImages returns the Images field value if set, zero value otherwise.
func (o *ImageGetListResponse) GetImages() []ImageImage {
	if o == nil || isNil(o.Images) {
		var ret []ImageImage
		return ret
	}
	return o.Images
}

// GetImagesOk returns a tuple with the Images field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageGetListResponse) GetImagesOk() ([]ImageImage, bool) {
	if o == nil || isNil(o.Images) {
    return nil, false
	}
	return o.Images, true
}

// HasImages returns a boolean if a field has been set.
func (o *ImageGetListResponse) HasImages() bool {
	if o != nil && !isNil(o.Images) {
		return true
	}

	return false
}

// SetImages gets a reference to the given []ImageImage and assigns it to the Images field.
func (o *ImageGetListResponse) SetImages(v []ImageImage) {
	o.Images = v
}

func (o ImageGetListResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Images) {
		toSerialize["images"] = o.Images
	}
	return json.Marshal(toSerialize)
}

type NullableImageGetListResponse struct {
	value *ImageGetListResponse
	isSet bool
}

func (v NullableImageGetListResponse) Get() *ImageGetListResponse {
	return v.value
}

func (v *NullableImageGetListResponse) Set(val *ImageGetListResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableImageGetListResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableImageGetListResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableImageGetListResponse(val *ImageGetListResponse) *NullableImageGetListResponse {
	return &NullableImageGetListResponse{value: val, isSet: true}
}

func (v NullableImageGetListResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableImageGetListResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


