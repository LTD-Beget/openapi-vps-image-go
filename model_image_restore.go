/*
API Образов облачных серверов

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package begetOpenapiVps-image

import (
	"encoding/json"
)

// ImageRestore struct for ImageRestore
type ImageRestore struct {
	Image *ImageImage `json:"image,omitempty"`
	RestoreStatus *string `json:"restore_status,omitempty"`
	VpsId *string `json:"vps_id,omitempty"`
	VpsName *string `json:"vps_name,omitempty"`
	DateCreate *string `json:"date_create,omitempty"`
	DateComplete *string `json:"date_complete,omitempty"`
}

// NewImageRestore instantiates a new ImageRestore object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewImageRestore() *ImageRestore {
	this := ImageRestore{}
	return &this
}

// NewImageRestoreWithDefaults instantiates a new ImageRestore object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewImageRestoreWithDefaults() *ImageRestore {
	this := ImageRestore{}
	return &this
}

// GetImage returns the Image field value if set, zero value otherwise.
func (o *ImageRestore) GetImage() ImageImage {
	if o == nil || isNil(o.Image) {
		var ret ImageImage
		return ret
	}
	return *o.Image
}

// GetImageOk returns a tuple with the Image field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageRestore) GetImageOk() (*ImageImage, bool) {
	if o == nil || isNil(o.Image) {
    return nil, false
	}
	return o.Image, true
}

// HasImage returns a boolean if a field has been set.
func (o *ImageRestore) HasImage() bool {
	if o != nil && !isNil(o.Image) {
		return true
	}

	return false
}

// SetImage gets a reference to the given ImageImage and assigns it to the Image field.
func (o *ImageRestore) SetImage(v ImageImage) {
	o.Image = &v
}

// GetRestoreStatus returns the RestoreStatus field value if set, zero value otherwise.
func (o *ImageRestore) GetRestoreStatus() string {
	if o == nil || isNil(o.RestoreStatus) {
		var ret string
		return ret
	}
	return *o.RestoreStatus
}

// GetRestoreStatusOk returns a tuple with the RestoreStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageRestore) GetRestoreStatusOk() (*string, bool) {
	if o == nil || isNil(o.RestoreStatus) {
    return nil, false
	}
	return o.RestoreStatus, true
}

// HasRestoreStatus returns a boolean if a field has been set.
func (o *ImageRestore) HasRestoreStatus() bool {
	if o != nil && !isNil(o.RestoreStatus) {
		return true
	}

	return false
}

// SetRestoreStatus gets a reference to the given string and assigns it to the RestoreStatus field.
func (o *ImageRestore) SetRestoreStatus(v string) {
	o.RestoreStatus = &v
}

// GetVpsId returns the VpsId field value if set, zero value otherwise.
func (o *ImageRestore) GetVpsId() string {
	if o == nil || isNil(o.VpsId) {
		var ret string
		return ret
	}
	return *o.VpsId
}

// GetVpsIdOk returns a tuple with the VpsId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageRestore) GetVpsIdOk() (*string, bool) {
	if o == nil || isNil(o.VpsId) {
    return nil, false
	}
	return o.VpsId, true
}

// HasVpsId returns a boolean if a field has been set.
func (o *ImageRestore) HasVpsId() bool {
	if o != nil && !isNil(o.VpsId) {
		return true
	}

	return false
}

// SetVpsId gets a reference to the given string and assigns it to the VpsId field.
func (o *ImageRestore) SetVpsId(v string) {
	o.VpsId = &v
}

// GetVpsName returns the VpsName field value if set, zero value otherwise.
func (o *ImageRestore) GetVpsName() string {
	if o == nil || isNil(o.VpsName) {
		var ret string
		return ret
	}
	return *o.VpsName
}

// GetVpsNameOk returns a tuple with the VpsName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageRestore) GetVpsNameOk() (*string, bool) {
	if o == nil || isNil(o.VpsName) {
    return nil, false
	}
	return o.VpsName, true
}

// HasVpsName returns a boolean if a field has been set.
func (o *ImageRestore) HasVpsName() bool {
	if o != nil && !isNil(o.VpsName) {
		return true
	}

	return false
}

// SetVpsName gets a reference to the given string and assigns it to the VpsName field.
func (o *ImageRestore) SetVpsName(v string) {
	o.VpsName = &v
}

// GetDateCreate returns the DateCreate field value if set, zero value otherwise.
func (o *ImageRestore) GetDateCreate() string {
	if o == nil || isNil(o.DateCreate) {
		var ret string
		return ret
	}
	return *o.DateCreate
}

// GetDateCreateOk returns a tuple with the DateCreate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageRestore) GetDateCreateOk() (*string, bool) {
	if o == nil || isNil(o.DateCreate) {
    return nil, false
	}
	return o.DateCreate, true
}

// HasDateCreate returns a boolean if a field has been set.
func (o *ImageRestore) HasDateCreate() bool {
	if o != nil && !isNil(o.DateCreate) {
		return true
	}

	return false
}

// SetDateCreate gets a reference to the given string and assigns it to the DateCreate field.
func (o *ImageRestore) SetDateCreate(v string) {
	o.DateCreate = &v
}

// GetDateComplete returns the DateComplete field value if set, zero value otherwise.
func (o *ImageRestore) GetDateComplete() string {
	if o == nil || isNil(o.DateComplete) {
		var ret string
		return ret
	}
	return *o.DateComplete
}

// GetDateCompleteOk returns a tuple with the DateComplete field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageRestore) GetDateCompleteOk() (*string, bool) {
	if o == nil || isNil(o.DateComplete) {
    return nil, false
	}
	return o.DateComplete, true
}

// HasDateComplete returns a boolean if a field has been set.
func (o *ImageRestore) HasDateComplete() bool {
	if o != nil && !isNil(o.DateComplete) {
		return true
	}

	return false
}

// SetDateComplete gets a reference to the given string and assigns it to the DateComplete field.
func (o *ImageRestore) SetDateComplete(v string) {
	o.DateComplete = &v
}

func (o ImageRestore) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Image) {
		toSerialize["image"] = o.Image
	}
	if !isNil(o.RestoreStatus) {
		toSerialize["restore_status"] = o.RestoreStatus
	}
	if !isNil(o.VpsId) {
		toSerialize["vps_id"] = o.VpsId
	}
	if !isNil(o.VpsName) {
		toSerialize["vps_name"] = o.VpsName
	}
	if !isNil(o.DateCreate) {
		toSerialize["date_create"] = o.DateCreate
	}
	if !isNil(o.DateComplete) {
		toSerialize["date_complete"] = o.DateComplete
	}
	return json.Marshal(toSerialize)
}

type NullableImageRestore struct {
	value *ImageRestore
	isSet bool
}

func (v NullableImageRestore) Get() *ImageRestore {
	return v.value
}

func (v *NullableImageRestore) Set(val *ImageRestore) {
	v.value = val
	v.isSet = true
}

func (v NullableImageRestore) IsSet() bool {
	return v.isSet
}

func (v *NullableImageRestore) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableImageRestore(val *ImageRestore) *NullableImageRestore {
	return &NullableImageRestore{value: val, isSet: true}
}

func (v NullableImageRestore) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableImageRestore) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


