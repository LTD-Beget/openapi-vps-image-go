/*
API Образов облачных серверов

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package begetOpenapiVps-image

import (
	"encoding/json"
)

// ImageDownloadLinkInfo struct for ImageDownloadLinkInfo
type ImageDownloadLinkInfo struct {
	Link *string `json:"link,omitempty"`
	ExpiredAt *string `json:"expired_at,omitempty"`
}

// NewImageDownloadLinkInfo instantiates a new ImageDownloadLinkInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewImageDownloadLinkInfo() *ImageDownloadLinkInfo {
	this := ImageDownloadLinkInfo{}
	return &this
}

// NewImageDownloadLinkInfoWithDefaults instantiates a new ImageDownloadLinkInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewImageDownloadLinkInfoWithDefaults() *ImageDownloadLinkInfo {
	this := ImageDownloadLinkInfo{}
	return &this
}

// GetLink returns the Link field value if set, zero value otherwise.
func (o *ImageDownloadLinkInfo) GetLink() string {
	if o == nil || isNil(o.Link) {
		var ret string
		return ret
	}
	return *o.Link
}

// GetLinkOk returns a tuple with the Link field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageDownloadLinkInfo) GetLinkOk() (*string, bool) {
	if o == nil || isNil(o.Link) {
    return nil, false
	}
	return o.Link, true
}

// HasLink returns a boolean if a field has been set.
func (o *ImageDownloadLinkInfo) HasLink() bool {
	if o != nil && !isNil(o.Link) {
		return true
	}

	return false
}

// SetLink gets a reference to the given string and assigns it to the Link field.
func (o *ImageDownloadLinkInfo) SetLink(v string) {
	o.Link = &v
}

// GetExpiredAt returns the ExpiredAt field value if set, zero value otherwise.
func (o *ImageDownloadLinkInfo) GetExpiredAt() string {
	if o == nil || isNil(o.ExpiredAt) {
		var ret string
		return ret
	}
	return *o.ExpiredAt
}

// GetExpiredAtOk returns a tuple with the ExpiredAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageDownloadLinkInfo) GetExpiredAtOk() (*string, bool) {
	if o == nil || isNil(o.ExpiredAt) {
    return nil, false
	}
	return o.ExpiredAt, true
}

// HasExpiredAt returns a boolean if a field has been set.
func (o *ImageDownloadLinkInfo) HasExpiredAt() bool {
	if o != nil && !isNil(o.ExpiredAt) {
		return true
	}

	return false
}

// SetExpiredAt gets a reference to the given string and assigns it to the ExpiredAt field.
func (o *ImageDownloadLinkInfo) SetExpiredAt(v string) {
	o.ExpiredAt = &v
}

func (o ImageDownloadLinkInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Link) {
		toSerialize["link"] = o.Link
	}
	if !isNil(o.ExpiredAt) {
		toSerialize["expired_at"] = o.ExpiredAt
	}
	return json.Marshal(toSerialize)
}

type NullableImageDownloadLinkInfo struct {
	value *ImageDownloadLinkInfo
	isSet bool
}

func (v NullableImageDownloadLinkInfo) Get() *ImageDownloadLinkInfo {
	return v.value
}

func (v *NullableImageDownloadLinkInfo) Set(val *ImageDownloadLinkInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableImageDownloadLinkInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableImageDownloadLinkInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableImageDownloadLinkInfo(val *ImageDownloadLinkInfo) *NullableImageDownloadLinkInfo {
	return &NullableImageDownloadLinkInfo{value: val, isSet: true}
}

func (v NullableImageDownloadLinkInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableImageDownloadLinkInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


