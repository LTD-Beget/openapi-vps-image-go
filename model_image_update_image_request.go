/*
API Образов облачных серверов

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package begetOpenapiVps-image

import (
	"encoding/json"
)

// ImageUpdateImageRequest struct for ImageUpdateImageRequest
type ImageUpdateImageRequest struct {
	Id *string `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	Region *string `json:"region,omitempty"`
}

// NewImageUpdateImageRequest instantiates a new ImageUpdateImageRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewImageUpdateImageRequest() *ImageUpdateImageRequest {
	this := ImageUpdateImageRequest{}
	return &this
}

// NewImageUpdateImageRequestWithDefaults instantiates a new ImageUpdateImageRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewImageUpdateImageRequestWithDefaults() *ImageUpdateImageRequest {
	this := ImageUpdateImageRequest{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ImageUpdateImageRequest) GetId() string {
	if o == nil || isNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageUpdateImageRequest) GetIdOk() (*string, bool) {
	if o == nil || isNil(o.Id) {
    return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ImageUpdateImageRequest) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ImageUpdateImageRequest) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ImageUpdateImageRequest) GetName() string {
	if o == nil || isNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageUpdateImageRequest) GetNameOk() (*string, bool) {
	if o == nil || isNil(o.Name) {
    return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ImageUpdateImageRequest) HasName() bool {
	if o != nil && !isNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ImageUpdateImageRequest) SetName(v string) {
	o.Name = &v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *ImageUpdateImageRequest) GetRegion() string {
	if o == nil || isNil(o.Region) {
		var ret string
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageUpdateImageRequest) GetRegionOk() (*string, bool) {
	if o == nil || isNil(o.Region) {
    return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *ImageUpdateImageRequest) HasRegion() bool {
	if o != nil && !isNil(o.Region) {
		return true
	}

	return false
}

// SetRegion gets a reference to the given string and assigns it to the Region field.
func (o *ImageUpdateImageRequest) SetRegion(v string) {
	o.Region = &v
}

func (o ImageUpdateImageRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !isNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !isNil(o.Region) {
		toSerialize["region"] = o.Region
	}
	return json.Marshal(toSerialize)
}

type NullableImageUpdateImageRequest struct {
	value *ImageUpdateImageRequest
	isSet bool
}

func (v NullableImageUpdateImageRequest) Get() *ImageUpdateImageRequest {
	return v.value
}

func (v *NullableImageUpdateImageRequest) Set(val *ImageUpdateImageRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableImageUpdateImageRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableImageUpdateImageRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableImageUpdateImageRequest(val *ImageUpdateImageRequest) *NullableImageUpdateImageRequest {
	return &NullableImageUpdateImageRequest{value: val, isSet: true}
}

func (v NullableImageUpdateImageRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableImageUpdateImageRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


