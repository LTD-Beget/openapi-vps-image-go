/*
API Образов облачных серверов

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package begetOpenapiVps-image

import (
	"encoding/json"
)

// ImageImageSourceVpsSource struct for ImageImageSourceVpsSource
type ImageImageSourceVpsSource struct {
	Id *string `json:"id,omitempty"`
	Stop *bool `json:"stop,omitempty"`
}

// NewImageImageSourceVpsSource instantiates a new ImageImageSourceVpsSource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewImageImageSourceVpsSource() *ImageImageSourceVpsSource {
	this := ImageImageSourceVpsSource{}
	return &this
}

// NewImageImageSourceVpsSourceWithDefaults instantiates a new ImageImageSourceVpsSource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewImageImageSourceVpsSourceWithDefaults() *ImageImageSourceVpsSource {
	this := ImageImageSourceVpsSource{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ImageImageSourceVpsSource) GetId() string {
	if o == nil || isNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageImageSourceVpsSource) GetIdOk() (*string, bool) {
	if o == nil || isNil(o.Id) {
    return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ImageImageSourceVpsSource) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ImageImageSourceVpsSource) SetId(v string) {
	o.Id = &v
}

// GetStop returns the Stop field value if set, zero value otherwise.
func (o *ImageImageSourceVpsSource) GetStop() bool {
	if o == nil || isNil(o.Stop) {
		var ret bool
		return ret
	}
	return *o.Stop
}

// GetStopOk returns a tuple with the Stop field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageImageSourceVpsSource) GetStopOk() (*bool, bool) {
	if o == nil || isNil(o.Stop) {
    return nil, false
	}
	return o.Stop, true
}

// HasStop returns a boolean if a field has been set.
func (o *ImageImageSourceVpsSource) HasStop() bool {
	if o != nil && !isNil(o.Stop) {
		return true
	}

	return false
}

// SetStop gets a reference to the given bool and assigns it to the Stop field.
func (o *ImageImageSourceVpsSource) SetStop(v bool) {
	o.Stop = &v
}

func (o ImageImageSourceVpsSource) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !isNil(o.Stop) {
		toSerialize["stop"] = o.Stop
	}
	return json.Marshal(toSerialize)
}

type NullableImageImageSourceVpsSource struct {
	value *ImageImageSourceVpsSource
	isSet bool
}

func (v NullableImageImageSourceVpsSource) Get() *ImageImageSourceVpsSource {
	return v.value
}

func (v *NullableImageImageSourceVpsSource) Set(val *ImageImageSourceVpsSource) {
	v.value = val
	v.isSet = true
}

func (v NullableImageImageSourceVpsSource) IsSet() bool {
	return v.isSet
}

func (v *NullableImageImageSourceVpsSource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableImageImageSourceVpsSource(val *ImageImageSourceVpsSource) *NullableImageImageSourceVpsSource {
	return &NullableImageImageSourceVpsSource{value: val, isSet: true}
}

func (v NullableImageImageSourceVpsSource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableImageImageSourceVpsSource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


