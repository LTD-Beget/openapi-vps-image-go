/*
API Образов облачных серверов

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package begetOpenapiVps-image

import (
	"encoding/json"
)

// ImageGetDownloadLinkResponse struct for ImageGetDownloadLinkResponse
type ImageGetDownloadLinkResponse struct {
	DownloadLinkInfo *ImageDownloadLinkInfo `json:"download_link_info,omitempty"`
	Error *ImageGetDownloadLinkResponseError `json:"error,omitempty"`
}

// NewImageGetDownloadLinkResponse instantiates a new ImageGetDownloadLinkResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewImageGetDownloadLinkResponse() *ImageGetDownloadLinkResponse {
	this := ImageGetDownloadLinkResponse{}
	return &this
}

// NewImageGetDownloadLinkResponseWithDefaults instantiates a new ImageGetDownloadLinkResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewImageGetDownloadLinkResponseWithDefaults() *ImageGetDownloadLinkResponse {
	this := ImageGetDownloadLinkResponse{}
	return &this
}

// GetDownloadLinkInfo returns the DownloadLinkInfo field value if set, zero value otherwise.
func (o *ImageGetDownloadLinkResponse) GetDownloadLinkInfo() ImageDownloadLinkInfo {
	if o == nil || isNil(o.DownloadLinkInfo) {
		var ret ImageDownloadLinkInfo
		return ret
	}
	return *o.DownloadLinkInfo
}

// GetDownloadLinkInfoOk returns a tuple with the DownloadLinkInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageGetDownloadLinkResponse) GetDownloadLinkInfoOk() (*ImageDownloadLinkInfo, bool) {
	if o == nil || isNil(o.DownloadLinkInfo) {
    return nil, false
	}
	return o.DownloadLinkInfo, true
}

// HasDownloadLinkInfo returns a boolean if a field has been set.
func (o *ImageGetDownloadLinkResponse) HasDownloadLinkInfo() bool {
	if o != nil && !isNil(o.DownloadLinkInfo) {
		return true
	}

	return false
}

// SetDownloadLinkInfo gets a reference to the given ImageDownloadLinkInfo and assigns it to the DownloadLinkInfo field.
func (o *ImageGetDownloadLinkResponse) SetDownloadLinkInfo(v ImageDownloadLinkInfo) {
	o.DownloadLinkInfo = &v
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *ImageGetDownloadLinkResponse) GetError() ImageGetDownloadLinkResponseError {
	if o == nil || isNil(o.Error) {
		var ret ImageGetDownloadLinkResponseError
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageGetDownloadLinkResponse) GetErrorOk() (*ImageGetDownloadLinkResponseError, bool) {
	if o == nil || isNil(o.Error) {
    return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *ImageGetDownloadLinkResponse) HasError() bool {
	if o != nil && !isNil(o.Error) {
		return true
	}

	return false
}

// SetError gets a reference to the given ImageGetDownloadLinkResponseError and assigns it to the Error field.
func (o *ImageGetDownloadLinkResponse) SetError(v ImageGetDownloadLinkResponseError) {
	o.Error = &v
}

func (o ImageGetDownloadLinkResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.DownloadLinkInfo) {
		toSerialize["download_link_info"] = o.DownloadLinkInfo
	}
	if !isNil(o.Error) {
		toSerialize["error"] = o.Error
	}
	return json.Marshal(toSerialize)
}

type NullableImageGetDownloadLinkResponse struct {
	value *ImageGetDownloadLinkResponse
	isSet bool
}

func (v NullableImageGetDownloadLinkResponse) Get() *ImageGetDownloadLinkResponse {
	return v.value
}

func (v *NullableImageGetDownloadLinkResponse) Set(val *ImageGetDownloadLinkResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableImageGetDownloadLinkResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableImageGetDownloadLinkResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableImageGetDownloadLinkResponse(val *ImageGetDownloadLinkResponse) *NullableImageGetDownloadLinkResponse {
	return &NullableImageGetDownloadLinkResponse{value: val, isSet: true}
}

func (v NullableImageGetDownloadLinkResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableImageGetDownloadLinkResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


