/*
API Образов облачных серверов

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package begetOpenapiVps-image

import (
	"encoding/json"
)

// ImageCreateImageRequest struct for ImageCreateImageRequest
type ImageCreateImageRequest struct {
	Source *ImageImageSource `json:"source,omitempty"`
	Name *string `json:"name,omitempty"`
	Region *string `json:"region,omitempty"`
}

// NewImageCreateImageRequest instantiates a new ImageCreateImageRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewImageCreateImageRequest() *ImageCreateImageRequest {
	this := ImageCreateImageRequest{}
	return &this
}

// NewImageCreateImageRequestWithDefaults instantiates a new ImageCreateImageRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewImageCreateImageRequestWithDefaults() *ImageCreateImageRequest {
	this := ImageCreateImageRequest{}
	return &this
}

// GetSource returns the Source field value if set, zero value otherwise.
func (o *ImageCreateImageRequest) GetSource() ImageImageSource {
	if o == nil || isNil(o.Source) {
		var ret ImageImageSource
		return ret
	}
	return *o.Source
}

// GetSourceOk returns a tuple with the Source field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageCreateImageRequest) GetSourceOk() (*ImageImageSource, bool) {
	if o == nil || isNil(o.Source) {
    return nil, false
	}
	return o.Source, true
}

// HasSource returns a boolean if a field has been set.
func (o *ImageCreateImageRequest) HasSource() bool {
	if o != nil && !isNil(o.Source) {
		return true
	}

	return false
}

// SetSource gets a reference to the given ImageImageSource and assigns it to the Source field.
func (o *ImageCreateImageRequest) SetSource(v ImageImageSource) {
	o.Source = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ImageCreateImageRequest) GetName() string {
	if o == nil || isNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageCreateImageRequest) GetNameOk() (*string, bool) {
	if o == nil || isNil(o.Name) {
    return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ImageCreateImageRequest) HasName() bool {
	if o != nil && !isNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ImageCreateImageRequest) SetName(v string) {
	o.Name = &v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *ImageCreateImageRequest) GetRegion() string {
	if o == nil || isNil(o.Region) {
		var ret string
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageCreateImageRequest) GetRegionOk() (*string, bool) {
	if o == nil || isNil(o.Region) {
    return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *ImageCreateImageRequest) HasRegion() bool {
	if o != nil && !isNil(o.Region) {
		return true
	}

	return false
}

// SetRegion gets a reference to the given string and assigns it to the Region field.
func (o *ImageCreateImageRequest) SetRegion(v string) {
	o.Region = &v
}

func (o ImageCreateImageRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Source) {
		toSerialize["source"] = o.Source
	}
	if !isNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !isNil(o.Region) {
		toSerialize["region"] = o.Region
	}
	return json.Marshal(toSerialize)
}

type NullableImageCreateImageRequest struct {
	value *ImageCreateImageRequest
	isSet bool
}

func (v NullableImageCreateImageRequest) Get() *ImageCreateImageRequest {
	return v.value
}

func (v *NullableImageCreateImageRequest) Set(val *ImageCreateImageRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableImageCreateImageRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableImageCreateImageRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableImageCreateImageRequest(val *ImageCreateImageRequest) *NullableImageCreateImageRequest {
	return &NullableImageCreateImageRequest{value: val, isSet: true}
}

func (v NullableImageCreateImageRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableImageCreateImageRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


