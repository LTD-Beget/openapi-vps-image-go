/*
API Образов облачных серверов

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package begetOpenapiVps-image

import (
	"encoding/json"
)

// ImageRestoreImageResponse struct for ImageRestoreImageResponse
type ImageRestoreImageResponse struct {
	Restore *ImageRestore `json:"restore,omitempty"`
	Error *ImageRestoreImageResponseError `json:"error,omitempty"`
}

// NewImageRestoreImageResponse instantiates a new ImageRestoreImageResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewImageRestoreImageResponse() *ImageRestoreImageResponse {
	this := ImageRestoreImageResponse{}
	return &this
}

// NewImageRestoreImageResponseWithDefaults instantiates a new ImageRestoreImageResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewImageRestoreImageResponseWithDefaults() *ImageRestoreImageResponse {
	this := ImageRestoreImageResponse{}
	return &this
}

// GetRestore returns the Restore field value if set, zero value otherwise.
func (o *ImageRestoreImageResponse) GetRestore() ImageRestore {
	if o == nil || isNil(o.Restore) {
		var ret ImageRestore
		return ret
	}
	return *o.Restore
}

// GetRestoreOk returns a tuple with the Restore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageRestoreImageResponse) GetRestoreOk() (*ImageRestore, bool) {
	if o == nil || isNil(o.Restore) {
    return nil, false
	}
	return o.Restore, true
}

// HasRestore returns a boolean if a field has been set.
func (o *ImageRestoreImageResponse) HasRestore() bool {
	if o != nil && !isNil(o.Restore) {
		return true
	}

	return false
}

// SetRestore gets a reference to the given ImageRestore and assigns it to the Restore field.
func (o *ImageRestoreImageResponse) SetRestore(v ImageRestore) {
	o.Restore = &v
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *ImageRestoreImageResponse) GetError() ImageRestoreImageResponseError {
	if o == nil || isNil(o.Error) {
		var ret ImageRestoreImageResponseError
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImageRestoreImageResponse) GetErrorOk() (*ImageRestoreImageResponseError, bool) {
	if o == nil || isNil(o.Error) {
    return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *ImageRestoreImageResponse) HasError() bool {
	if o != nil && !isNil(o.Error) {
		return true
	}

	return false
}

// SetError gets a reference to the given ImageRestoreImageResponseError and assigns it to the Error field.
func (o *ImageRestoreImageResponse) SetError(v ImageRestoreImageResponseError) {
	o.Error = &v
}

func (o ImageRestoreImageResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Restore) {
		toSerialize["restore"] = o.Restore
	}
	if !isNil(o.Error) {
		toSerialize["error"] = o.Error
	}
	return json.Marshal(toSerialize)
}

type NullableImageRestoreImageResponse struct {
	value *ImageRestoreImageResponse
	isSet bool
}

func (v NullableImageRestoreImageResponse) Get() *ImageRestoreImageResponse {
	return v.value
}

func (v *NullableImageRestoreImageResponse) Set(val *ImageRestoreImageResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableImageRestoreImageResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableImageRestoreImageResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableImageRestoreImageResponse(val *ImageRestoreImageResponse) *NullableImageRestoreImageResponse {
	return &NullableImageRestoreImageResponse{value: val, isSet: true}
}

func (v NullableImageRestoreImageResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableImageRestoreImageResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


